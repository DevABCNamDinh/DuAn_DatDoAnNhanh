@model DuAn_DoAnNhanh.Data.ViewModel.StatisticalViewModel

<div class="container my-5">
    <div class="row g-4">
        <!-- Tổng tiền -->
        <div class="col-md-6 col-lg-3">
            <div class="card card-custom bg-primary-custom">
                <h5>Tổng tiền</h5>
                <h2 class="counter" data-target="@Model.TotalAmount"></h2>
            </div>
        </div>

        <!-- Đơn hàng hoàn thành -->
        <div class="col-md-6 col-lg-3">
            <div class="card card-custom bg-info-custom">

                <h5>Đơn hàng hoàn thành</h5>
                <h2 class="counter" data-target="@Model.CompletedBillCount">0</h2>
            </div>
        </div>

        <!-- Đơn hàng chờ xác nhận -->
        <div class="col-md-6 col-lg-3">
            <div class="card card-custom bg-purple-custom">
                <a asp-action="GetAll" asp-route-status="Pending">
                    <h5>Đơn hàng chờ xác nhận</h5>
                    <h2 class="counter" data-target="@Model.PendingBillCount">0</h2>
                </a>
                
            </div>
        </div>

        <!-- Đơn hàng đang giao -->
        <div class="col-md-6 col-lg-3">
            <div class="card card-custom bg-success-custom">
                <h5>Đơn hàng đang giao</h5>
                <h2 class="counter" data-target="@Model.ShippingBillCount">0</h2>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const counters = document.querySelectorAll('.counter');

        counters.forEach(counter => {
            const updateCount = () => {
                const target = +counter.getAttribute('data-target');
                let current = +counter.innerText.replace(/\D/g, '');

                const increment = Math.ceil(target / 30);

                if (current < target) {
                    current += increment;
                    counter.innerText = `${current.toLocaleString()}`;
                    setTimeout(updateCount, 30);
                } else {
                    counter.innerText = `${target.toLocaleString()}`;
                }
            };

            updateCount();
        });
    });
</script>

<style>
    .card-custom {
        color: white;
        border-radius: 10px;
        padding: 20px;
        text-align: left;
    }

    .bg-primary-custom {
        background-color: #007bff;
    }

    .bg-info-custom {
        background-color: #17a2b8;
    }

    .bg-purple-custom {
        background-color: #6f42c1;
    }

    .bg-success-custom {
        background-color: #28a745;
    }
</style>
