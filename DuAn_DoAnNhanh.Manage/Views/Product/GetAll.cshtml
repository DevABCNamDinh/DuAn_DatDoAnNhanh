@model IEnumerable<DuAn_DoAnNhanh.Data.Entities.Product>

<div id="productModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            @*  <div class="modal-header">
            <h2 style="color: bla; text-align: center; margin-bottom: 20px;">Tạo Sản Phẩm Mới</h2>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
            </button>
            </div> *@
            <div class="modal-body">
                <!-- Gọi ViewComponent và truyền model đúng kiểu nếu cần -->
                @await Component.InvokeAsync("ProductCreate")
            </div>
        </div>
    </div>
</div>

<!-- Thêm script cho jQuery và Bootstrap -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<!-- CSS cho nút "X" khi hover -->
<style>
    /* Ẩn nút "X" mặc định */
    .delete-combo-btn {
        display: none;
    }

    /* Hiển thị nút "X" khi di chuột vào combo-card */
    .combo-card:hover .delete-combo-btn {
        display: inline-block;
    }
</style>
<!-- Script mở và đóng modal -->
<script>
    $(document).ready(function () {
        // Khi nhấn nút mở modal
        $("#openModal").click(function () {
            $("#productModal").modal('show');
        });

        $("a[id^='openUpdateModal_']").click(function () {
            var productId = $(this).attr("id").split("_")[1]; // Lấy ProductID từ id của nút
            $("#productUpdateModal_" + productId).modal('show');
        });

        $("a[id^='openDeleteModal_']").click(function () {
            var productId = $(this).attr("id").split("_")[1]; // Lấy ProductID từ id của nút
            $("#productDeleteModal_" + productId).modal('show');
        });
        // Khi nhấn nút đóng modal
        $(".close").click(function () {
            $("#productModal").modal('hide');
        });
    });
</script>

<!DOCTYPE html>
<html lang="vi">

<body>

    <article>
        <form asp-action="GetAll" asp-controller="Product">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Tìm kiếm sản phẩm" name="search">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">Tìm kiếm</button>
                </div>
            </div>
        </form>



        <!-- Nút mở modal tạo sản phẩm mới -->
        <p>
            <a id="openModal" style="color: white; background-color: red; padding: 10px 20px; border-radius: 5px; text-decoration: none; cursor: pointer;">
                Thêm sản phẩm
            </a>
        </p>

        @if (Model == null || !Model.Any())
        {
            <div class="alert alert-warning" role="alert">
                Sản phẩm trống.
            </div>
        }
        else
        {
            <div class="row">
                @foreach (var product in Model)
                {
                    <div class="col-md-4 col-sm-6 mb-4">
                        <div class="card h-100 position-relative combo-card">
                            <!-- Nút "X" hiển thị khi hover -->
                            <a href="@Url.Action("Delete", "Product", new { id = product.ProductID })"
                               class="btn btn-danger position-absolute top-0 end-0 m-2 delete-combo-btn"
                               title="Xóa combo">
                                X
                            </a>

                            <img class="card-img-top" src="@product.ImageUrl" style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <h4 class="card-title"><b>@product.ProductName</b></h4>
                                <h5>Đã bán: @product.Quantity</h5>
                                <h3 class="card-title style=" style="color: red;"><b>@product.Price.ToString("N0") đ</b></h3>

                                <a id="openUpdateModal_@product.ProductID" class="btn btn-primary">
                                    Sửa
                                </a>
                            </div>
                        </div>
                    </div>




                    <div id="productUpdateModal_@product.ProductID" class="modal" tabindex="-1" role="dialog">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content overflow-auto">
                                <div class="modal-body">
                                    <!-- Gọi ViewComponent và truyền model đúng kiểu nếu cần -->
                                    @await Component.InvokeAsync("ProductUpdate", new { idProduct = @product.ProductID })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="productDeleteModal_@product.ProductID" class="modal" tabindex="-1" role="dialog">
                        <div class="modal-dialog modal-custom-height" role="document">
                            @*   <div class="modal-content">
                    <div class="modal-body">
                    <!-- Gọi ViewComponent và truyền model đúng kiểu nếu cần -->
                    @await Component.InvokeAsync("ProductDelete", new { idProduct = @product.ProductID })
                    </div>
                    </div> *@
                        </div>
                    </div>
                }
            </div>
        }
    </article>
</body>
</html>


