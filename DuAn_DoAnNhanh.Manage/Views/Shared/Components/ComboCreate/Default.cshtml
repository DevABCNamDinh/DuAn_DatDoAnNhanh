@model DuAn_DoAnNhanh.Data.ViewModel.ComboCreateViewModel

<div class="form-container">
    <form asp-action="Create" asp-controller="Combo" method="post" enctype="multipart/form-data" class="combo-form">
        <div class="form-group">
            <label class="form-label">Tên Combo:</label>
            <input type="text" asp-for="ComboName" required class="form-input" />
        </div>

        <div class="form-group">
            <label class="form-label">Hình Ảnh:</label>
            <input type="file" name="ImageFile" id="ImageFile" class="form-control" accept="image/*" required />
        </div>

        <div class="form-group">
            <label class="form-label">Mô Tả:</label>
            <textarea asp-for="Description" class="form-textarea"></textarea>
        </div>

        <div class="form-group">
            <label class="form-label">Chọn sản phẩm cho Combo (ít nhất 2 sản phẩm):</label>
            @if (Model.AvailableProducts == null || !Model.AvailableProducts.Any())
            {
                <div class="alert alert-warning" role="alert">
                    Không có sản phẩm nào trong cửa hàng.
                </div>
            }
            else
            {
                <div class="product-selection" id="productList">
                    @foreach (var product in Model.AvailableProducts)
                    {
                        <div class="product-item">
                            <div class="card mb-4">
                                <div class="row g-0">
                                    <div class="col-md-8">
                                        <div class="card-body">
                                            <h5 class="card-title">@product.ProductName</h5>
                                            <h3 class="card-title" style="color: red;"><b>Giá: @product.Price.ToString("N0") đ</b></h3>
                                            <div class="form-check">
                                                <input type="checkbox" class="form-check-input product-checkbox"
                                                       name="SelectedProducts[@product.ProductID].ProductID"
                                                       value="@product.ProductID"
                                                       data-product-id="@product.ProductID">
                                                <label class="form-check-label">Chọn sản phẩm này</label>
                                            </div>
                                            <div class="quantity-input" style="display: none;">
                                                <label>Số lượng:</label>
                                                <input type="number"
                                                       name="SelectedProducts[@product.ProductID].Quantity"
                                                       value="1"
                                                       min="1"
                                                       class="form-input quantity-field"
                                                       style="width: 60px;">
                                                <input type="hidden"
                                                       name="SelectedProducts[@product.ProductID].ProductName"
                                                       value="@product.ProductName">
                                                <input type="hidden"
                                                       name="SelectedProducts[@product.ProductID].Price"
                                                       value="@product.Price">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <img src="@product.ImageUrl" class="img-fluid rounded-end" alt="@product.ProductName" style="height: 100%; object-fit: cover;">
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="pagination-controls">
                    <button id="prevPage" class="btn btn-secondary">Trang trước</button>
                    <span id="pageInfo"></span>
                    <button id="nextPage" class="btn btn-secondary">Trang sau</button>
                </div>
            }
        </div>

        <div class="text-center">
            <button type="submit" class="form-button" id="submitButton" disabled>Tạo Combo</button>
            <button type="button" class="form-button cancel-button" data-dismiss="Model">Hủy</button>
        </div>
    </form>
</div>

<style>
    .form-container {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        max-width: 1200px;
        margin: auto;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        font-weight: bold;
        margin-bottom: 5px;
        display: block;
    }

    .form-input,
    .form-textarea,
    .form-control {
        width: 100%;
        padding: 8px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }

    .form-textarea {
        height: 100px;
    }

    .form-button {
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        background-color: #007bff;
        color: #fff;
        cursor: pointer;
        margin: 0 10px;
    }

        .form-button:disabled {
            background-color: #6c757d;
            cursor: not-allowed;
        }

        .form-button:hover:not(:disabled) {
            background-color: #0056b3;
        }

    .cancel-button {
        background-color: #dc3545;
    }

        .cancel-button:hover:not(:disabled) {
            background-color: #c82333;
        }

    .product-selection {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .product-item {
        width: 100%;
        margin-bottom: 20px;
    }

    .card {
        border: 1px solid #dee2e6;
        transition: transform 0.2s;
    }

        .card:hover {
            transform: scale(1.02);
        }

    .pagination-controls {
        text-align: center;
        margin-top: 20px;
    }

        .pagination-controls button {
            margin: 0 10px;
        }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const checkboxes = document.querySelectorAll('.product-checkbox');
        const submitButton = document.getElementById('submitButton');
        const productList = document.getElementById('productList');
        const prevPageButton = document.getElementById('prevPage');
        const nextPageButton = document.getElementById('nextPage');
        const pageInfo = document.getElementById('pageInfo');

        const itemsPerPage = 4;
        let currentPage = 1;
        const products = Array.from(productList.getElementsByClassName('product-item'));
        const totalPages = Math.ceil(products.length / itemsPerPage);

        function showPage(page) {
            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;

            products.forEach((product, index) => {
                product.style.display = (index >= start && index < end) ? 'block' : 'none';
            });

            pageInfo.textContent = `Trang ${page} / ${totalPages}`;
            prevPageButton.disabled = page === 1;
            nextPageButton.disabled = page === totalPages;
        }

        prevPageButton.addEventListener('click', function () {
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
            }
        });

        nextPageButton.addEventListener('click', function () {
            if (currentPage < totalPages) {
                currentPage++;
                showPage(currentPage);
            }
        });

        function updateSubmitButton() {
            const checkedCount = document.querySelectorAll('.product-checkbox:checked').length;
            submitButton.disabled = checkedCount < 2;
        }

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                const quantityDiv = this.closest('.card-body').querySelector('.quantity-input');
                quantityDiv.style.display = this.checked ? 'block' : 'none';
                updateSubmitButton();
            });
        });

        showPage(currentPage);
        updateSubmitButton();
    });
    document.querySelector('.cancel-button').addEventListener('click', function () {
        if (confirm('Bạn có chắc chắn muốn hủy không?')) {
            window.location.href = '/Combo/GetAll'; // Điều hướng đến URL nếu người dùng đồng ý
        }
    });
</script>