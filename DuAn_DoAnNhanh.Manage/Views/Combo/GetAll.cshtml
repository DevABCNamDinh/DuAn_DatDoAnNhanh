@model IEnumerable<DuAn_DoAnNhanh.Data.ViewModel.ComboWithProductsViewModel>

<div class="search-container mb-4">
    <form id="searchForm" method="get" action="@Url.Action("GetAll")">
        <input type="text" name="searchTerm" id="searchInput" placeholder="Tìm kiếm combo..." class="form-control" value="@ViewBag.SearchTerm" />
        <button type="submit" class="btn btn-primary mt-2">Tìm kiếm</button>
        <label for="statusFilter" class="form-label mt-2">Lọc theo trạng thái:</label>
        <select name="status" id="statusFilter" class="form-select" onchange="window.location.href='@Url.Action("GetAll")?status=' + this.value;">
            <option value="">Tất cả</option>
            <option value="Activity" selected="@(ViewBag.Status == "Activity" ? "selected" : null)">Đang hoạt động</option>
            <option value="InActivity" selected="@(ViewBag.Status == "InActivity" ? "selected" : null)">Ngừng hoạt động</option>
        </select>
    </form>
</div>

<p>
    <a id="openModal" style="color: white; background-color: red; padding: 10px 20px; border-radius: 5px; text-decoration: none; cursor: pointer;">
        Thêm Combo
    </a>
</p>

<!-- Modal cho việc tạo sản phẩm mới -->
<div id="comboModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5>Tạo Combo Mới</h5>
            </div>
            <div class="modal-body">
                @await Component.InvokeAsync("ComboCreate")
            </div>
        </div>
    </div>
</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning" role="alert">
        Combo trống.
    </div>
}
else
{
    <div class="row" id="comboList">
        @foreach (var combo in Model)
        {
            <div class="col-md-4 col-sm-6 mb-4 combo-item" data-status="@combo.Combo.Status">
                <div class="card h-100 position-relative combo-card">
                    @if (combo.Combo.Status == DuAn_DoAnNhanh.Data.Enum.StatusCombo.Activity)
                    {
                        <span class="status-label actived position-absolute top-0 start-0 m-2">Đang hoạt động</span>
                        <a href="@Url.Action("Deactivate", "Combo", new { id = combo.Combo.ComboID, searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, page = ViewBag.CurrentPage })"
                           class="btn btn-danger position-absolute top-0 end-0 m-2"
                           onclick="return confirm('Bạn có chắc muốn vô hiệu hóa combo này?')">
                            X
                        </a>
                    }
                    else
                    {
                        <span class="status-label inactive position-absolute top-0 start-0 m-2">Ngừng hoạt động</span>
                        <a href="@Url.Action("Activate", "Combo", new { id = combo.Combo.ComboID, searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, page = ViewBag.CurrentPage })"
                           class="btn btn-success position-absolute top-0 end-0 m-2"
                           onclick="return confirm('Bạn có chắc muốn kích hoạt combo này?')">
                            ✔
                        </a>
                    }

                    <img class="card-img-top" src="@combo.Combo.Image" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h4 class="card-title"><b>@combo.Combo.ComboName</b></h4>
                        @foreach (var item in combo.Products)
                        {
                            <h5 class="card-title">@item.Quantity @item.ProductName</h5>
                        }

                        @if (combo.Combo.SetupPrice == null)
                        {
                            <h3 class="card-title" style="color: red;"><b>@combo.Combo.Price.ToString("N0") đ</b></h3>
                        }
                        else
                        {
                            <p class="card-title" style="color: red;"><b><del>@combo.Combo.Price.ToString("N0")</del> đ</b></p>
                            <h3 class="card-title" style="color: red;"><b>@(combo.Combo.SetupPrice.HasValue ? combo.Combo.SetupPrice.Value.ToString("N0") : "0") đ</b></h3>
                        }

                        @Html.ActionLink("Xem chi tiết", "Details", new { id = combo.Combo.ComboID }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Phân trang -->
    <div class="pagination text-center mt-4">
        @if (ViewBag.CurrentPage > 1)
        {
            <a href="@Url.Action("GetAll", new { searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, page = ViewBag.CurrentPage - 1 })" class="btn btn-secondary">Trang trước</a>
        }
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <a href="@Url.Action("GetAll", new { searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, page = i })" class="btn @(i == ViewBag.CurrentPage ? "btn-primary" : "btn-secondary")">@i</a>
        }
        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <a href="@Url.Action("GetAll", new { searchTerm = ViewBag.SearchTerm, status = ViewBag.Status, page = ViewBag.CurrentPage + 1 })" class="btn btn-secondary">Trang sau</a>
        }
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

@section Scripts {
    <script>
        $('#openModal').click(() => $('#comboModal').modal('show'));
    </script>
}

<style>
    .status-label {
        padding: 5px 10px;
        border-radius: 5px;
        color: white;
        font-weight: bold;
        pointer-events: none;
    }

    .actived {
        background-color: green;
    }

    .inactive {
        background-color: yellow;
        color: black;
    }

    .combo-card:hover .btn {
        display: inline-block;
    }
</style>