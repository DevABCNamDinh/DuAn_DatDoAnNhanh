@model IEnumerable<DuAn_DoAnNhanh.Data.ViewModel.ComboWithProductsViewModel>

<div class="search-container mb-4">
    <input type="text" id="searchInput" placeholder="Tìm kiếm combo..." class="form-control" />
</div>

<p>
    <a id="openModal" style="color: white; background-color: red; padding: 10px 20px; border-radius: 5px; text-decoration: none; cursor: pointer;">
        Thêm Combo
    </a>
</p>

<!-- Modal cho việc tạo sản phẩm mới -->
<div id="comboModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <!-- Gọi ViewComponent và truyền model đúng kiểu nếu cần -->
                @await Component.InvokeAsync("ComboCreate")
            </div>
        </div>
    </div>
</div>

@if (Model == null || !Model.Any())
{
    <div class="alert alert-warning" role="alert">
        Combo trống.
    </div>
}
else
{
    <div class="row" id="comboList">
        @foreach (var combo in Model)
        {
            <div class="col-md-4 col-sm-6 mb-4 combo-item">
                <div class="card h-100 position-relative combo-card">
                    <!-- Nút "X" hiển thị khi hover -->
                    <a href="@Url.Action("Delete", "Combo", new { id = combo.Combo.ComboID })"
                       class="btn btn-danger position-absolute top-0 end-0 m-2 delete-combo-btn"
                       title="Xóa combo">
                        X
                    </a>

                    <img class="card-img-top" src="@combo.Combo.Image" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h4 class="card-title"><b>@combo.Combo.ComboName</b></h4>
                        @foreach (var item in combo.Products)
                        {
                            <h5 class="card-title">@item.Quantity @item.ProductName</h5>
                        }

                        @if (combo.Combo.SetupPrice == null)
                        {
                            <h3 class="card-title style=" style="color: red;"><b>@combo.Combo.Price.ToString("N0") đ</b></h3>
                        }else{
                            <p class="card-title style=" style="color: red;"><b><del>@combo.Combo.Price.ToString("N0")</del> đ</b></p>
                            <h3 class="card-title style=" style="color: red;"><b>@(combo.Combo.SetupPrice.HasValue ? combo.Combo.SetupPrice.Value.ToString("N0") : "0") đ</b></h3>
                        }
             
                        @Html.ActionLink("Xem chi tiết", "Details", new { id = combo.Combo.ComboID }, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
    </div>
}

<!-- Thêm script cho jQuery và Bootstrap -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- Script mở và đóng modal -->
<script>
    $(document).ready(function () {
        // Khi nhấn nút mở modal
        $("#openModal").click(function () {
            $("#comboModal").modal('show');
        });

        // Khi nhấn nút đóng modal
        $(".close").click(function () {
            $("#comboModal").modal('hide');
        });
    });
    // Tìm kiếm combo
    $("#searchInput").on("keyup", function () {
        var value = $(this).val().toLowerCase();
        $(".combo-item").filter(function () {
            $(this).toggle($(this).find(".card-title b").text().toLowerCase().indexOf(value) > -1);
        });
    });
</script>
